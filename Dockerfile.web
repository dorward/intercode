ARG RUBY_VERSION=2.5.3

FROM ruby:${RUBY_VERSION}-alpine as build
ARG RAILS_ENV=production

RUN apk add --no-cache build-base yarn git postgresql-dev mariadb-connector-c-dev sqlite-dev cmake flex curl python tzdata

RUN mkdir -p /tmp \
  && cd /tmp \
  && curl -sL https://github.com/graphql/libgraphqlparser/archive/v0.7.0.tar.gz >libgraphqlparser-0.7.0.tar.gz \
  && tar xfz libgraphqlparser-0.7.0.tar.gz \
  && cd /tmp/libgraphqlparser-0.7.0 \
  && cmake . \
  && make install \
  && cd /tmp \
  && rm -rf libgraphqlparser-0.7.0 libgraphqlparser-0.7.0.tar.gz

RUN mkdir -p /usr/src/build \
  && addgroup -S www \
  && adduser -G www -S www \
  && chown www:www /usr/src/build
USER www

WORKDIR /usr/src/build

ENV RAILS_ENV $RAILS_ENV
ENV AWS_ACCESS_KEY_ID dummy
ENV AWS_SECRET_ACCESS_KEY dummy

COPY Gemfile Gemfile.lock /usr/src/build/
RUN bundle install \
  && rm -rf /usr/local/bundle/cache/*.gem \
  && find /usr/local/bundle/gems -name '*.c' -delete \
  && find /usr/local/bundle/gems -name '*.o' -delete

COPY package.json yarn.lock /usr/src/build/
RUN yarn install

COPY --chown=www:www . /usr/src/build

RUN DATABASE_URL=sqlite3:db/assets.sqlite3 bundle exec rake assets:precompile \
  && rm -rf node_modules tmp/cache

FROM build AS dev

USER root
RUN apk add --no-cache less \
  && mv /usr/src/build /usr/src/app

USER www
ENV RAILS_ENV development
WORKDIR /usr/src/app
RUN yarn install

FROM build AS test

USER root
RUN apk add --repository https://alpine.global.ssl.fastly.net/alpine/edge/testing/ --allow-untrusted --no-cache s3cmd curl bash

USER www
RUN curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter \
  && chmod +x ./cc-test-reporter \
  && ./cc-test-reporter before-build \
  && yarn install --production=false \
  && cp -R public/packs public/packs-test

FROM ruby:${RUBY_VERSION}-alpine AS production
ARG RAILS_ENV=production

ENV RAILS_ENV $RAILS_ENV

RUN apk add --no-cache yarn postgresql-libs mariadb-connector-c sqlite tzdata

RUN addgroup -S www \
  && adduser -G www -S www
USER www

COPY --from=build /usr/local/bundle /usr/local/bundle
COPY --from=build /usr/local/lib/libgraphqlparser.so /usr/local/lib/libgraphqlparser.so
COPY --from=build --chown=www /usr/src/build /usr/src/app
WORKDIR /usr/src/app

CMD bundle exec rails server -p $PORT -b 0.0.0.0
