.row
  .col-md-9
    %h1.larp-title= @event.title

    %dl.row
      - if @event.author.present?
        %dt.col-md-3 Author(s)
        %dd.col-md-9= @event.author
      - if @event.organization.present?
        %dt.col-md-3 Organization
        %dd.col-md-9= @event.organization
      - if @event.url.present?
        %dt.col-md-3 Home Page
        %dd.col-md-9= link_to @event.url, @event.url, :target => '_blank'
      - if @event.email.present?
        %dt.col-md-3 Contact Email
        %dd.col-md-9= intercode_mail_to @event.email
      - if @team_members.any?
        %dt.col-md-3= @event.team_member_name.titleize.pluralize
        %dd.col-md-9
          %ul.list-unstyled
            - @team_members.each do |team_member|
              %li
                = team_member.user.name
                - if team_member.email
                  (#{intercode_mail_to team_member.email})

  .col-md-3
    - if can? :edit, @event
      .card
        .card-header
          Event Admin
        %ul.list-group.list-group-flush
          %li.list-group-item
            = link_to('Edit Event', [:edit, @event])
          %li.list-group-item
            = link_to("Edit #{@event.team_member_name.titleize.pluralize}", [@event, :team_members])

- if @runs.any?
  %section.my-4
    %hr

    .d-flex.flex-wrap.justify-content-center
      - @runs.sort_by(&:starts_at).each do |run|
        .col-lg-4.col-md-6.col-sm-12
          .card.mb-3
            .card-header
              - if run.title_suffix.present?
                %p
                  %strong= run.title_suffix

              #{run.starts_at.strftime("%a %l:%M%P")}-#{run.ends_at.strftime("%l:%M%P")}
              %br
              = run.rooms.map(&:name).sort.join(", ")

            .card-body.text-center
              - count_presenter = SignupCountPresenter.new(run)
              - signups_by_state_and_bucket_key = count_presenter.signups_by_state_and_bucket_key
              - progress_classes = ['bg-success', 'bg-danger', 'bg-info', 'bg-primary']

              .run-capacity.bg-white.rounded.mb-2{style: 'overflow: hidden'}
                - count_presenter.buckets.each_with_index do |bucket, index|
                  - signups = signups_by_state_and_bucket_key['confirmed'][bucket.key]
                  - capacity = bucket.total_slots
                  - capacity_fraction = count_presenter.capacity_fraction_for_bucket(bucket.key)
                  .bucket-capacity
                    .bucket-capacity-bars
                      - remaining_capacity = capacity - signups.size
                      .bucket-capacity-bar{class: "bg-bucket-color-#{(index % 9) + 1}", style: "width: #{capacity_fraction * 100.0}%;"}
                        - (remaining_capacity - 1).times do |index|
                          .bucket-capacity-tickmark.bg-white{class: (capacity >= 10 ? 'bucket-capacity-tickmark-thin' : ''), style: "left: #{((index + 1).to_f / remaining_capacity) * 100.0}%;"}
                      - if signups.size > 0
                        .bucket-capacity-bar.bg-bucket-color-full{style: "width: #{(1.0 - capacity_fraction) * 100.0}%;"}
                          - signups.size.times do |index|
                            .bucket-capacity-tickmark.bg-white{class: (capacity >= 10 ? 'bucket-capacity-tickmark-thin' : ''), style: "left: #{(index.to_f / signups.size) * 100.0}%;"}
                    #{bucket.name}: #{count_presenter.capacity_description_for_bucket(bucket.key)}
                - if count_presenter.waitlist_count > 0
                  .bucket-capacity
                    Waitlist: #{count_presenter.waitlist_count}

              - my_signup = @user_signup_by_run_id[run.id]
              - if my_signup
                %p
                  - if my_signup.confirmed?
                    %em You are signed up.
                  - else
                    - ahead_of_me = run.signups.select { |signup| signup.waitlisted? && signup.created_at < my_signup.created_at }
                    %em You are ##{ahead_of_me.size + 1} on the waitlist.

                %p= link_to "Withdraw", [@event, run, :user_signup], class: 'btn btn-outline-danger', method: "DELETE", "data-confirm" => "Are you sure you want to withdraw from #{@event.title}?"
              - elsif @team_members.any? { |team_member| team_member.user_con_profile == user_con_profile }
                = link_to event_run_user_signup_path(@event, run), method: "POST", class: "btn btn-outline-primary" do
                  %strong Sign up
                  %br
                  Team member
              - else
                - count_presenter.buckets.each_with_index do |bucket, index|
                  - next if bucket.anything?
                  = link_to event_run_user_signup_path(@event, run, requested_bucket_key: bucket.key), method: "POST", class: "btn btn-outline-bucket-color-#{(index % 9) + 1} mx-1" do
                    %strong Sign up
                    - if count_presenter.buckets.size > 1
                      %br
                      #{bucket.name}

              - if can? :read, run.signups.new
                .mt-2= link_to('View signups', [@event, run, :admin_signups])
              - elsif can? :signup_summary, run
                .mt-2= link_to('View signups', [:signup_summary, @event, run])

%section.my-4
  %hr

  = MarkdownPresenter.new('No description provided').render @event.description

- %w[content_warnings age_restrictions participant_communications].each do |field|
  - value = @event.public_send(field)
  - if value.present?
    %hr

    %section.my-4
      %h4= field.humanize

      = MarkdownPresenter.new('No information provided').render value
