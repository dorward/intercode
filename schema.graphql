type Ability {
  can_become_user_con_profile(user_con_profile_id: Int!): Boolean!
  can_create_tickets: Boolean!
  can_create_user_con_profiles: Boolean!
  can_delete_event(event_id: Int!): Boolean!
  can_delete_ticket(ticket_id: Int!): Boolean!
  can_delete_user_con_profile(user_con_profile_id: Int!): Boolean!
  can_override_maximum_event_provided_tickets: Boolean!
  can_read_signups: Boolean!
  can_update_event(event_id: Int!): Boolean!
  can_update_event_proposal(event_proposal_id: Int!): Boolean!
  can_update_signup(signup_id: Int!): Boolean!
  can_update_signups: Boolean!
  can_update_ticket(ticket_id: Int!): Boolean!
  can_update_user_con_profile(user_con_profile_id: Int!): Boolean!
}

# Autogenerated input type of AddOrderEntryToCurrentPendingOrder
input AddOrderEntryToCurrentPendingOrderInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  order_entry: OrderEntryInput!
}

# Autogenerated return type of AddOrderEntryToCurrentPendingOrder
type AddOrderEntryToCurrentPendingOrderPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  order_entry: OrderEntry
}

# Autogenerated input type of CancelOrder
input CancelOrderInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
}

# Autogenerated return type of CancelOrder
type CancelOrderPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  order: Order
}

type CmsLayout {
  admin_notes: String
  content: String
  id: Int!
  name: String
  navbar_classes: String
}

type CmsNavigationItem {
  id: Int!
  navigation_items: [CmsNavigationItem]
  navigation_section: CmsNavigationItem
  page: Page
  position: Int
  title: String
}

input CmsNavigationItemInput {
  navigation_section_id: Int
  page_id: Int
  position: Int
  title: String
}

type Convention {
  accepting_proposals: Boolean
  cms_layouts: [CmsLayout]
  cms_navigation_items: [CmsNavigationItem]
  created_at: Date
  default_layout: CmsLayout
  domain: String
  ends_at: Date
  event_proposal_form: FormType!
  event_proposals_paginated(filters: EventProposalFiltersInput, page: Int, per_page: Int, sort: [SortInput]): EventProposalsPagination!
  filler_event_form: FormType!
  id: Int!
  mail_privilege_names: [String!]!
  maximum_event_signups: ScheduledValue
  maximum_tickets: Int
  name: String
  orders(
    # Returns the elements in the list that come after the specified cursor.
    after: String

    # Returns the elements in the list that come before the specified cursor.
    before: String

    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the last _n_ elements from the list.
    last: Int
  ): OrdersConnection
  orders_paginated(filters: OrderFiltersInput, page: Int, per_page: Int, sort: [SortInput]): OrdersPagination!
  pages: [Page]
  privilege_names: [String!]!
  products: [Product]
  regular_event_form: FormType!
  rooms: [Room]
  root_page: Page
  show_schedule: ShowSchedule
  signup_spy_paginated(filters: UserConProfileFiltersInput, page: Int, per_page: Int, sort: [SortInput]): SignupsPagination!
  staff_positions: [StaffPosition]
  starts_at: Date
  ticket_name: String!
  ticket_types: [TicketType]
  timezone_name: String
  updated_at: Date
  user_con_profile_form: FormType!
  user_con_profiles_paginated(filters: UserConProfileFiltersInput, page: Int, per_page: Int, sort: [SortInput]): UserConProfilesPagination!
  volunteer_event_form: FormType!
}

input ConventionInput {
  accepting_proposals: Boolean
  default_layout_id: Int
  domain: String
  ends_at: Date
  maximum_event_signups: ScheduledValueInput
  maximum_tickets: Int
  name: String
  root_page_id: Int
  show_schedule: ShowSchedule
  starts_at: Date
  ticket_name: String
  timezone_name: String
}

# Autogenerated input type of CreateCmsNavigationItem
input CreateCmsNavigationItemInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  cms_navigation_item: CmsNavigationItemInput!
}

# Autogenerated return type of CreateCmsNavigationItem
type CreateCmsNavigationItemPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  cms_navigation_item: CmsNavigationItem
}

# Autogenerated input type of CreateEvent
input CreateEventInput {
  category: String!

  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  event: EventInput!
}

# Autogenerated return type of CreateEvent
type CreateEventPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  event: Event
}

# Autogenerated input type of CreateEventProposal
input CreateEventProposalInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  clone_event_proposal_id: Int
}

# Autogenerated return type of CreateEventProposal
type CreateEventProposalPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  event_proposal: EventProposal!
}

# Autogenerated input type of CreateFillerEvent
input CreateFillerEventInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  event: EventInput!
  run: RunInput!
}

# Autogenerated return type of CreateFillerEvent
type CreateFillerEventPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  event: Event
}

# Autogenerated input type of CreateMaximumEventProvidedTicketsOverride
input CreateMaximumEventProvidedTicketsOverrideInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  event_id: Int!
  override_value: Int!
  ticket_type_id: Int!
}

# Autogenerated return type of CreateMaximumEventProvidedTicketsOverride
type CreateMaximumEventProvidedTicketsOverridePayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  maximum_event_provided_tickets_override: MaximumEventProvidedTicketsOverride!
}

# Autogenerated input type of CreateMultipleRuns
input CreateMultipleRunsInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  event_id: Int!
  runs: [RunInput!]!
}

# Autogenerated return type of CreateMultipleRuns
type CreateMultipleRunsPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  runs: [Run!]!
}

# Autogenerated input type of CreateProduct
input CreateProductInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  product: ProductInput!
}

# Autogenerated return type of CreateProduct
type CreateProductPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  product: Product
}

# Autogenerated input type of CreateRoom
input CreateRoomInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  room: RoomInput!
}

# Autogenerated return type of CreateRoom
type CreateRoomPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  room: Room
}

# Autogenerated input type of CreateRun
input CreateRunInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  event_id: Int!
  run: RunInput!
}

# Autogenerated return type of CreateRun
type CreateRunPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  run: Run
}

# Autogenerated input type of CreateStaffPosition
input CreateStaffPositionInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  staff_position: StaffPositionInput!
}

# Autogenerated return type of CreateStaffPosition
type CreateStaffPositionPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  staff_position: StaffPosition
}

# Autogenerated input type of CreateTeamMember
input CreateTeamMemberInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  event_id: Int!
  provide_ticket_type_id: Int
  team_member: TeamMemberInput!
  user_con_profile_id: Int!
}

# Autogenerated return type of CreateTeamMember
type CreateTeamMemberPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  team_member: TeamMember!
  ticket: Ticket
}

# Autogenerated input type of CreateTicketType
input CreateTicketTypeInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  ticket_type: TicketTypeInput!
}

# Autogenerated return type of CreateTicketType
type CreateTicketTypePayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  ticket_type: TicketType
}

# Autogenerated input type of CreateUserConProfile
input CreateUserConProfileInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  user_con_profile: UserConProfileInput!
  user_id: Int!
}

# Autogenerated return type of CreateUserConProfile
type CreateUserConProfilePayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  user_con_profile: UserConProfile
}

# Date in ISO8601 format
scalar Date

# Autogenerated input type of DeleteCmsNavigationItem
input DeleteCmsNavigationItemInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
}

# Autogenerated return type of DeleteCmsNavigationItem
type DeleteCmsNavigationItemPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  cms_navigation_item: CmsNavigationItem
}

# Autogenerated input type of DeleteMaximumEventProvidedTicketsOverride
input DeleteMaximumEventProvidedTicketsOverrideInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
}

# Autogenerated return type of DeleteMaximumEventProvidedTicketsOverride
type DeleteMaximumEventProvidedTicketsOverridePayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  maximum_event_provided_tickets_override: MaximumEventProvidedTicketsOverride!
}

# Autogenerated input type of DeleteOrderEntry
input DeleteOrderEntryInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
}

# Autogenerated return type of DeleteOrderEntry
type DeleteOrderEntryPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  order_entry: OrderEntry
}

# Autogenerated input type of DeletePage
input DeletePageInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
}

# Autogenerated return type of DeletePage
type DeletePagePayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  page: Page
}

# Autogenerated input type of DeleteProduct
input DeleteProductInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
}

# Autogenerated return type of DeleteProduct
type DeleteProductPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  product: Product
}

# Autogenerated input type of DeleteRoom
input DeleteRoomInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
}

# Autogenerated return type of DeleteRoom
type DeleteRoomPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  room: Room
}

# Autogenerated input type of DeleteRun
input DeleteRunInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
}

# Autogenerated return type of DeleteRun
type DeleteRunPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  run: Run
}

# Autogenerated input type of DeleteStaffPosition
input DeleteStaffPositionInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
}

# Autogenerated return type of DeleteStaffPosition
type DeleteStaffPositionPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  staff_position: StaffPosition
}

# Autogenerated input type of DeleteTeamMember
input DeleteTeamMemberInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
}

# Autogenerated return type of DeleteTeamMember
type DeleteTeamMemberPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  team_member: TeamMember
}

# Autogenerated input type of DeleteTicket
input DeleteTicketInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
  refund: Boolean
}

# Autogenerated return type of DeleteTicket
type DeleteTicketPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  ticket: Ticket
}

# Autogenerated input type of DeleteTicketType
input DeleteTicketTypeInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
}

# Autogenerated return type of DeleteTicketType
type DeleteTicketTypePayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  ticket_type: TicketType
}

# Autogenerated input type of DeleteUserConProfile
input DeleteUserConProfileInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
}

# Autogenerated return type of DeleteUserConProfile
type DeleteUserConProfilePayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  user_con_profile: UserConProfile
}

# Autogenerated input type of DropEvent
input DropEventInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
}

# Autogenerated return type of DropEvent
type DropEventPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  event: Event
}

type Event {
  age_restrictions: String
  author: String
  can_play_concurrently: Boolean
  can_provide_tickets: Boolean!
  category: String
  con_mail_destination: String
  content_warnings: String
  description: String
  description_html: String
  email: String
  event_page_url: String
  form_response_attrs_json: String
  id: Int!
  length_seconds: Int
  maximum_event_provided_tickets_overrides: [MaximumEventProvidedTicketsOverride!]!
  organization: String
  participant_communications: String
  provided_tickets: [Ticket!]!
  registration_policy: RegistrationPolicy
  run(id: Int!): Run!
  runs: [Run!]!
  short_blurb: String
  short_blurb_html: String
  slots_limited: Boolean
  status: String
  team_member_name: String!
  team_members: [TeamMember!]!
  title: String
  total_slots: Int
  url: String
}

enum EventCategory {
  board_game
  filler
  larp
  moderated_discussion
  panel
  presentation
  tabletop_rpg
  volunteer_event
  workshop
}

input EventInput {
  category: EventCategory
  form_response_attrs_json: String
}

type EventProposal {
  convention: Convention!
  created_at: Date!
  event: Event
  form_response_attrs_json: String
  id: Int!
  length_seconds: Int
  owner: UserConProfile!
  registration_policy: RegistrationPolicy
  status: String!
  submitted_at: Date!
  title: String
  updated_at: Date!
}

input EventProposalFiltersInput {
  owner: String
  status: [String]
  title: String
}

input EventProposalInput {
  form_response_attrs_json: String
}

type EventProposalsPagination implements PaginationInterface {
  current_page: Int!
  entries: [EventProposal!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

# Autogenerated input type of ForceConfirmSignup
input ForceConfirmSignupInput {
  bucket_key: String!

  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
}

# Autogenerated return type of ForceConfirmSignup
type ForceConfirmSignupPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  signup: Signup
}

type FormType {
  export_json: String!
  form_api_json: String!
  id: Int!
}

# Autogenerated input type of MarkOrderPaid
input MarkOrderPaidInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
}

# Autogenerated return type of MarkOrderPaid
type MarkOrderPaidPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  order: Order
}

type MaximumEventProvidedTicketsOverride {
  event: Event!
  id: Int!
  override_value: Int!
  ticket_type: TicketType!
}

type Money {
  currency_code: String!
  fractional: Int!
}

input MoneyInput {
  currency_code: String!
  fractional: Int!
}

type Mutation {
  addOrderEntryToCurrentPendingOrder(input: AddOrderEntryToCurrentPendingOrderInput!): AddOrderEntryToCurrentPendingOrderPayload
  cancelOrder(input: CancelOrderInput!): CancelOrderPayload
  createCmsNavigationItem(input: CreateCmsNavigationItemInput!): CreateCmsNavigationItemPayload
  createEvent(input: CreateEventInput!): CreateEventPayload
  createEventProposal(input: CreateEventProposalInput!): CreateEventProposalPayload
  createFillerEvent(input: CreateFillerEventInput!): CreateFillerEventPayload
  createMaximumEventProvidedTicketsOverride(input: CreateMaximumEventProvidedTicketsOverrideInput!): CreateMaximumEventProvidedTicketsOverridePayload
  createMultipleRuns(input: CreateMultipleRunsInput!): CreateMultipleRunsPayload
  createProduct(input: CreateProductInput!): CreateProductPayload
  createRoom(input: CreateRoomInput!): CreateRoomPayload
  createRun(input: CreateRunInput!): CreateRunPayload
  createStaffPosition(input: CreateStaffPositionInput!): CreateStaffPositionPayload
  createTeamMember(input: CreateTeamMemberInput!): CreateTeamMemberPayload
  createTicketType(input: CreateTicketTypeInput!): CreateTicketTypePayload
  createUserConProfile(input: CreateUserConProfileInput!): CreateUserConProfilePayload
  deleteCmsNavigationItem(input: DeleteCmsNavigationItemInput!): DeleteCmsNavigationItemPayload
  deleteMaximumEventProvidedTicketsOverride(input: DeleteMaximumEventProvidedTicketsOverrideInput!): DeleteMaximumEventProvidedTicketsOverridePayload
  deleteOrderEntry(input: DeleteOrderEntryInput!): DeleteOrderEntryPayload
  deletePage(input: DeletePageInput!): DeletePagePayload
  deleteProduct(input: DeleteProductInput!): DeleteProductPayload
  deleteRoom(input: DeleteRoomInput!): DeleteRoomPayload
  deleteRun(input: DeleteRunInput!): DeleteRunPayload
  deleteStaffPosition(input: DeleteStaffPositionInput!): DeleteStaffPositionPayload
  deleteTeamMember(input: DeleteTeamMemberInput!): DeleteTeamMemberPayload
  deleteTicket(input: DeleteTicketInput!): DeleteTicketPayload
  deleteTicketType(input: DeleteTicketTypeInput!): DeleteTicketTypePayload
  deleteUserConProfile(input: DeleteUserConProfileInput!): DeleteUserConProfilePayload
  dropEvent(input: DropEventInput!): DropEventPayload
  forceConfirmSignup(input: ForceConfirmSignupInput!): ForceConfirmSignupPayload
  markOrderPaid(input: MarkOrderPaidInput!): MarkOrderPaidPayload
  provideEventTicket(input: ProvideEventTicketInput!): ProvideEventTicketPayload
  purchaseTicket(input: PurchaseTicketInput!): PurchaseTicketPayload
  restoreDroppedEvent(input: RestoreDroppedEventInput!): RestoreDroppedEventPayload
  sortCmsNavigationItems(input: SortCmsNavigationItemsInput!): SortCmsNavigationItemsPayload
  submitEventProposal(input: SubmitEventProposalInput!): SubmitEventProposalPayload
  submitOrder(input: SubmitOrderInput!): SubmitOrderPayload
  transitionEventProposal(input: TransitionEventProposalInput!): TransitionEventProposalPayload
  updateCmsNavigationItem(input: UpdateCmsNavigationItemInput!): UpdateCmsNavigationItemPayload
  updateConvention(input: UpdateConventionInput!): UpdateConventionPayload
  updateEvent(input: UpdateEventInput!): UpdateEventPayload
  updateEventProposal(input: UpdateEventProposalInput!): UpdateEventProposalPayload
  updateFormWithJSON(input: UpdateFormWithJSONInput!): UpdateFormWithJSONPayload
  updateMaximumEventProvidedTicketsOverride(input: UpdateMaximumEventProvidedTicketsOverrideInput!): UpdateMaximumEventProvidedTicketsOverridePayload
  updateOrder(input: UpdateOrderInput!): UpdateOrderPayload
  updateOrderEntry(input: UpdateOrderEntryInput!): UpdateOrderEntryPayload
  updateProduct(input: UpdateProductInput!): UpdateProductPayload
  updateRoom(input: UpdateRoomInput!): UpdateRoomPayload
  updateRun(input: UpdateRunInput!): UpdateRunPayload
  updateSignupBucket(input: UpdateSignupBucketInput!): UpdateSignupBucketPayload
  updateSignupCounted(input: UpdateSignupCountedInput!): UpdateSignupCountedPayload
  updateStaffPosition(input: UpdateStaffPositionInput!): UpdateStaffPositionPayload
  updateTeamMember(input: UpdateTeamMemberInput!): UpdateTeamMemberPayload
  updateTicketType(input: UpdateTicketTypeInput!): UpdateTicketTypePayload
  updateUserConProfile(input: UpdateUserConProfileInput!): UpdateUserConProfilePayload
  withdrawAllUserConProfileSignups(input: WithdrawAllUserConProfileSignupsInput!): WithdrawAllUserConProfileSignupsPayload
}

type Order {
  charge_id: String
  id: Int
  order_entries: [OrderEntry]!
  paid_at: Date
  payment_amount: Money
  payment_note: String
  status: String!
  submitted_at: Date
  total_price: Money!
  user_con_profile: UserConProfile!
}

# An edge in a connection.
type OrderEdge {
  # A cursor for use in pagination.
  cursor: String!

  # The item at the end of the edge.
  node: Order
}

type OrderEntry {
  describe_products: String!
  id: Int
  order: Order!
  price: Money!
  price_per_item: Money!
  product: Product!
  product_variant: ProductVariant
  quantity: Int!
}

input OrderEntryInput {
  product_id: Int
  product_variant_id: Int
  quantity: Int
}

input OrderFiltersInput {
  status: String
  user_name: String
}

input OrderInput {
  payment_note: String
}

type OrderQuantityByStatus {
  quantity: Int!
  status: String!
}

# The connection type for Order.
type OrdersConnection {
  # A list of edges.
  edges: [OrderEdge]

  # Information to aid in pagination.
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrdersPagination implements PaginationInterface {
  current_page: Int!
  entries: [Order!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

type Page {
  admin_notes: String
  content: String
  id: Int!
  name: String
  slug: String
}

# Information about pagination in a connection.
type PageInfo {
  # When paginating forwards, the cursor to continue.
  endCursor: String

  # When paginating forwards, are there more items?
  hasNextPage: Boolean!

  # When paginating backwards, are there more items?
  hasPreviousPage: Boolean!

  # When paginating backwards, the cursor to continue.
  startCursor: String
}

interface PaginationInterface {
  current_page: Int!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

enum PaymentMode {
  later
  now
}

type Product {
  available: Boolean!
  description: String
  description_html: String
  id: Int
  image_url: String
  name: String!
  order_quantities_by_status: [OrderQuantityByStatus]!
  payment_options: [String]!
  price: Money!
  product_variants: [ProductVariant]!
}

input ProductInput {
  available: Boolean
  delete_variant_ids: [Int]
  description: String
  image: Upload
  name: String
  payment_options: [String]
  price: MoneyInput
  product_variants: [ProductVariantInput]
}

type ProductVariant {
  description: String
  description_html: String
  id: Int
  image_url: String
  name: String!
  order_quantities_by_status: [OrderQuantityByStatus]!
  override_price: Money
  position: Int
  product: Product!
}

input ProductVariantInput {
  description: String
  id: Int
  image: Upload
  name: String
  override_price: MoneyInput
}

# Autogenerated input type of ProvideEventTicket
input ProvideEventTicketInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  event_id: Int!
  ticket_type_id: Int!
  user_con_profile_id: Int!
}

# Autogenerated return type of ProvideEventTicket
type ProvideEventTicketPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  ticket: Ticket
}

# Autogenerated input type of PurchaseTicket
input PurchaseTicketInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  stripe_token: String!
  ticket_type_id: Int!
}

# Autogenerated return type of PurchaseTicket
type PurchaseTicketPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  ticket: Ticket
}

type Query {
  convention(id: Int): Convention
  currentPendingOrder: Order
  event(id: Int!): Event
  eventProposal(id: Int!): EventProposal
  events(extendedCounts: Boolean, includeDropped: Boolean): [Event]
  form(id: Int!): FormType
  myProfile: UserConProfile
  my_signups: [Signup]
  previewLiquid(content: String!): String!
  previewMarkdown(markdown: String!): String!
  product(id: Int!): Product!
  signup(id: Int!): Signup!
  staffPosition(id: Int!): StaffPosition
  userConProfile(id: Int!): UserConProfile
  users_paginated(filters: UserFiltersInput, page: Int, per_page: Int, sort: [SortInput]): UsersPagination!
}

type RegistrationPolicy {
  buckets: [RegistrationPolicyBucket!]!
  minimum_slots: Int
  preferred_slots: Int
  prevent_no_preference_signups: Boolean!
  slots_limited: Boolean
  total_slots: Int
}

type RegistrationPolicyBucket {
  anything: Boolean!
  description: String
  expose_attendees: Boolean!
  key: String!
  minimum_slots: Int
  name: String
  not_counted: Boolean!
  preferred_slots: Int
  slots_limited: Boolean!
  total_slots: Int
}

# Autogenerated input type of RestoreDroppedEvent
input RestoreDroppedEventInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
}

# Autogenerated return type of RestoreDroppedEvent
type RestoreDroppedEventPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  event: Event
}

type Room {
  id: Int
  name: String
  runs: [Run]
}

input RoomInput {
  name: String
}

type Run {
  confirmed_limited_signup_count: Int
  confirmed_signup_count: Int
  ends_at: Date
  event: Event
  id: Int!
  my_signups: [Signup]
  not_counted_signup_count: Int
  rooms: [Room]
  schedule_note: String
  signups_paginated(filters: SignupFiltersInput, page: Int, per_page: Int, sort: [SortInput]): SignupsPagination!
  starts_at: Date
  title_suffix: String
  waitlisted_signup_count: Int
}

input RunInput {
  room_ids: [Int]
  schedule_note: String
  starts_at: Date
  title_suffix: String
}

type ScheduledMoneyValue {
  timespans: [TimespanWithMoneyValue!]!
}

input ScheduledMoneyValueInput {
  timespans: [TimespanWithMoneyValueInput!]!
}

type ScheduledValue {
  timespans: [TimespanWithValue!]!
}

input ScheduledValueInput {
  timespans: [TimespanWithValueInput!]!
}

enum ShowSchedule {
  gms
  no
  priv
  yes
}

type Signup {
  bucket_key: String
  choice: Int
  counted: Boolean
  created_at: Date!
  id: Int!
  requested_bucket_key: String
  run: Run
  state: SignupState
  updated_at: Date!
  user_con_profile: UserConProfile
}

input SignupFiltersInput {
  bucket: [String]
  email: String
  name: String
  state: [String]
}

enum SignupState {
  confirmed
  waitlisted
  withdrawn
}

type SignupsPagination implements PaginationInterface {
  current_page: Int!
  entries: [Signup!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

# Autogenerated input type of SortCmsNavigationItems
input SortCmsNavigationItemsInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  sort_items: [UpdateCmsNavigationItemInput]!
}

# Autogenerated return type of SortCmsNavigationItems
type SortCmsNavigationItemsPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

input SortInput {
  desc: Boolean!
  field: String!
}

type StaffPosition {
  email: String
  id: Int!
  name: String
  user_con_profiles: [UserConProfile]
  visible: Boolean
}

input StaffPositionInput {
  email: String
  name: String
  user_con_profile_ids: [Int]
  visible: Boolean
}

# Autogenerated input type of SubmitEventProposal
input SubmitEventProposalInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
}

# Autogenerated return type of SubmitEventProposal
type SubmitEventProposalPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  event_proposal: EventProposal
}

# Autogenerated input type of SubmitOrder
input SubmitOrderInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
  payment_mode: PaymentMode!
  stripe_token: String
}

# Autogenerated return type of SubmitOrder
type SubmitOrderPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  order: Order
}

type TeamMember {
  display: Boolean!
  event: Event!
  id: Int!
  receive_con_email: Boolean!
  receive_signup_email: Boolean!
  show_email: Boolean!
  user_con_profile: UserConProfile!
}

input TeamMemberInput {
  display: Boolean
  receive_con_email: Boolean
  receive_signup_email: Boolean
  show_email: Boolean
}

type Ticket {
  charge_id: String
  convention: Convention!
  created_at: Date!
  id: Int!
  payment_amount: Money
  payment_note: String
  provided_by_event: Event
  ticket_type: TicketType!
  updated_at: Date!
  user_con_profile: UserConProfile!
}

type TicketType {
  allows_event_signups: Boolean!
  convention: Convention!
  counts_towards_convention_maximum: Boolean!
  description: String
  id: Int!
  maximum_event_provided_tickets(event_id: Int): Int!
  name: String
  pricing_schedule: ScheduledMoneyValue
  publicly_available: Boolean!
}

input TicketTypeInput {
  allows_event_signups: Boolean
  counts_towards_convention_maximum: Boolean
  description: String
  maximum_event_provided_tickets: Int
  name: String
  pricing_schedule: ScheduledMoneyValueInput
  publicly_available: Boolean
}

type TimespanWithMoneyValue {
  finish: Date
  start: Date
  value: Money!
}

input TimespanWithMoneyValueInput {
  finish: Date
  start: Date
  value: MoneyInput!
}

type TimespanWithValue {
  finish: Date
  start: Date
  value: String!
}

input TimespanWithValueInput {
  finish: Date
  start: Date
  string_value: String
}

# Autogenerated input type of TransitionEventProposal
input TransitionEventProposalInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
  status: String!
}

# Autogenerated return type of TransitionEventProposal
type TransitionEventProposalPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  event_proposal: EventProposal!
}

# Autogenerated input type of UpdateCmsNavigationItem
input UpdateCmsNavigationItemInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  cms_navigation_item: CmsNavigationItemInput!
  id: Int!
}

# Autogenerated return type of UpdateCmsNavigationItem
type UpdateCmsNavigationItemPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  cms_navigation_item: CmsNavigationItem
}

# Autogenerated input type of UpdateConvention
input UpdateConventionInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  convention: ConventionInput!
  id: Int
}

# Autogenerated return type of UpdateConvention
type UpdateConventionPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  convention: Convention
}

# Autogenerated input type of UpdateEvent
input UpdateEventInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  event: EventInput!
  id: Int!
}

# Autogenerated return type of UpdateEvent
type UpdateEventPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  event: Event
}

# Autogenerated input type of UpdateEventProposal
input UpdateEventProposalInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  event_proposal: EventProposalInput!
  id: Int!
}

# Autogenerated return type of UpdateEventProposal
type UpdateEventProposalPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  event_proposal: EventProposal
}

# Autogenerated input type of UpdateFormWithJSON
input UpdateFormWithJSONInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  form_json: String!
  id: Int!
}

# Autogenerated return type of UpdateFormWithJSON
type UpdateFormWithJSONPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  form: FormType
}

# Autogenerated input type of UpdateMaximumEventProvidedTicketsOverride
input UpdateMaximumEventProvidedTicketsOverrideInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
  override_value: Int!
}

# Autogenerated return type of UpdateMaximumEventProvidedTicketsOverride
type UpdateMaximumEventProvidedTicketsOverridePayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  maximum_event_provided_tickets_override: MaximumEventProvidedTicketsOverride!
}

# Autogenerated input type of UpdateOrderEntry
input UpdateOrderEntryInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
  order_entry: OrderEntryInput!
}

# Autogenerated return type of UpdateOrderEntry
type UpdateOrderEntryPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  order_entry: OrderEntry
}

# Autogenerated input type of UpdateOrder
input UpdateOrderInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
  order: OrderInput!
}

# Autogenerated return type of UpdateOrder
type UpdateOrderPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  order: Order
}

# Autogenerated input type of UpdateProduct
input UpdateProductInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
  product: ProductInput!
}

# Autogenerated return type of UpdateProduct
type UpdateProductPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  product: Product
}

# Autogenerated input type of UpdateRoom
input UpdateRoomInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
  room: RoomInput!
}

# Autogenerated return type of UpdateRoom
type UpdateRoomPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  room: Room
}

# Autogenerated input type of UpdateRun
input UpdateRunInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
  run: RunInput!
}

# Autogenerated return type of UpdateRun
type UpdateRunPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  run: Run
}

# Autogenerated input type of UpdateSignupBucket
input UpdateSignupBucketInput {
  bucket_key: String!

  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
}

# Autogenerated return type of UpdateSignupBucket
type UpdateSignupBucketPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  signup: Signup
}

# Autogenerated input type of UpdateSignupCounted
input UpdateSignupCountedInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  counted: Boolean!
  id: Int!
}

# Autogenerated return type of UpdateSignupCounted
type UpdateSignupCountedPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  signup: Signup
}

# Autogenerated input type of UpdateStaffPosition
input UpdateStaffPositionInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
  staff_position: StaffPositionInput!
}

# Autogenerated return type of UpdateStaffPosition
type UpdateStaffPositionPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  staff_position: StaffPosition
}

# Autogenerated input type of UpdateTeamMember
input UpdateTeamMemberInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
  team_member: TeamMemberInput!
}

# Autogenerated return type of UpdateTeamMember
type UpdateTeamMemberPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  team_member: TeamMember
}

# Autogenerated input type of UpdateTicketType
input UpdateTicketTypeInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
  ticket_type: TicketTypeInput!
}

# Autogenerated return type of UpdateTicketType
type UpdateTicketTypePayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  ticket_type: TicketType
}

# Autogenerated input type of UpdateUserConProfile
input UpdateUserConProfileInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: Int!
  user_con_profile: UserConProfileInput!
}

# Autogenerated return type of UpdateUserConProfile
type UpdateUserConProfilePayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  user_con_profile: UserConProfile
}

scalar Upload

type User {
  email: String
  event_proposals: [EventProposal]!
  first_name: String
  id: Int!
  last_name: String
  name: String
  name_inverted: String
  privileges: [String]
}

type UserConProfile {
  ability: Ability
  address: String
  best_call_time: String
  bio: String
  birth_date: Date
  can_override_maximum_event_provided_tickets: Boolean!
  city: String
  convention: Convention
  country: String
  day_phone: String
  email: String
  evening_phone: String
  first_name: String
  form_response_attrs_json: String
  id: Int!
  last_name: String
  name: String
  name_inverted: String
  name_without_nickname: String
  nickname: String
  orders: [Order]!
  preferred_contact: String
  privileges: [String]
  show_nickname_in_bio: Boolean
  signups: [Signup]!
  state: String
  team_members: [TeamMember]!
  ticket: Ticket
  user: User
  zipcode: String
}

input UserConProfileFiltersInput {
  email: String
  name: String
  privileges: [String]
  ticket: [String]
}

input UserConProfileInput {
  address: String
  best_call_time: String
  bio: String
  birth_date: Date
  city: String
  country: String
  day_phone: String
  evening_phone: String
  first_name: String
  form_response_attrs_json: String
  last_name: String
  nickname: String
  preferred_contact: String
  privileges: [String]
  show_nickname_in_bio: Boolean
  state: String
  zipcode: String
}

type UserConProfilesPagination implements PaginationInterface {
  current_page: Int!
  entries: [UserConProfile!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

input UserFiltersInput {
  email: String
  name: String
  privileges: [String]
}

type UsersPagination implements PaginationInterface {
  current_page: Int!
  entries: [User!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

# Autogenerated input type of WithdrawAllUserConProfileSignups
input WithdrawAllUserConProfileSignupsInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  user_con_profile_id: Int!
}

# Autogenerated return type of WithdrawAllUserConProfileSignups
type WithdrawAllUserConProfileSignupsPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  user_con_profile: UserConProfile!
}